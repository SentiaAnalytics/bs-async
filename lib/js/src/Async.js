// Generated by BUCKLESCRIPT VERSION 2.0.0, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");

function map(f, res) {
  if (res.tag) {
    return /* Ok */Block.__(1, [Curry._1(f, res[0])]);
  } else {
    return /* Error */Block.__(0, [res[0]]);
  }
}

function map2(f, r1, r2) {
  if (r1.tag) {
    if (r2.tag) {
      return /* Ok */Block.__(1, [Curry._2(f, r1[0], r2[0])]);
    } else {
      return /* Error */Block.__(0, [r2[0]]);
    }
  } else {
    return /* Error */Block.__(0, [r1[0]]);
  }
}

function map3(f, r1, r2, r3) {
  if (r1.tag) {
    if (r2.tag) {
      if (r3.tag) {
        return /* Ok */Block.__(1, [Curry._3(f, r1[0], r2[0], r3[0])]);
      } else {
        return /* Error */Block.__(0, [r3[0]]);
      }
    } else {
      return /* Error */Block.__(0, [r2[0]]);
    }
  } else {
    return /* Error */Block.__(0, [r1[0]]);
  }
}

function flatten(r) {
  if (r.tag) {
    return r[0];
  } else {
    return /* Error */Block.__(0, [r[0]]);
  }
}

function flatMap(f, res) {
  if (res.tag) {
    return Curry._1(f, res[0]);
  } else {
    return /* Error */Block.__(0, [res[0]]);
  }
}

function withDefault(a, res) {
  if (res.tag) {
    return res[0];
  } else {
    return a;
  }
}

function fromOption(err, opt) {
  if (opt) {
    return /* Ok */Block.__(1, [opt[0]]);
  } else {
    return /* Error */Block.__(0, [err]);
  }
}

function isError(res) {
  if (res.tag) {
    return /* false */0;
  } else {
    return /* true */1;
  }
}

function isOk(res) {
  if (res.tag) {
    return /* true */1;
  } else {
    return /* false */0;
  }
}

function encode(encodeError, encodeOk, param) {
  if (param.tag) {
    return Curry._1(encodeOk, param[0]);
  } else {
    return Curry._1(encodeError, param[0]);
  }
}

var Result = /* module */[
  /* map */map,
  /* map2 */map2,
  /* map3 */map3,
  /* flatten */flatten,
  /* flatMap */flatMap,
  /* withDefault */withDefault,
  /* fromOption */fromOption,
  /* isError */isError,
  /* isOk */isOk,
  /* encode */encode
];

function none() {
  return /* () */0;
}

function make(a, cb) {
  return Curry._1(cb, a);
}

function map$1(f, a, cb) {
  return Curry._1(a, (function (param) {
                return Curry._1(cb, Curry._1(f, param));
              }));
}

function flatten$1(a, cb) {
  return Curry._1(a, (function (b) {
                return Curry._1(b, cb);
              }));
}

function flatMap$1(f, a) {
  return (function (param) {
      return Curry._1(a, (function (param$1) {
                    var f$1 = f;
                    var g = function (b) {
                      return Curry._1(b, param);
                    };
                    var a = param$1;
                    return Curry._1(g, Curry._1(f$1, a));
                  }));
    });
}

var Async = /* module */[
  /* none */none,
  /* make */make,
  /* map */map$1,
  /* flatten */flatten$1,
  /* flatMap */flatMap$1
];

function none$1() {
  return /* () */0;
}

function resolve(a, cb) {
  return Curry._1(cb, /* Ok */Block.__(1, [a]));
}

function reject(x, cb) {
  return Curry._1(cb, /* Error */Block.__(0, [x]));
}

function fromJs(f, cb) {
  Curry._1(f, /* () */0).then((function (a) {
          return Curry._1(cb, /* Ok */Block.__(1, [a]));
        }), (function (x) {
          return Curry._1(cb, /* Error */Block.__(0, [x]));
        }));
  return /* () */0;
}

function map$2(f, a, cb) {
  return Curry._1(a, (function (x) {
                if (x.tag) {
                  return Curry._1(cb, /* Ok */Block.__(1, [Curry._1(f, x[0])]));
                } else {
                  return Curry._1(cb, /* Error */Block.__(0, [x[0]]));
                }
              }));
}

function flatten$2(a, cb) {
  return Curry._1(a, (function (res) {
                if (res.tag) {
                  return Curry._1(res[0], (function (res) {
                                if (res.tag) {
                                  return Curry._1(cb, /* Ok */Block.__(1, [res[0]]));
                                } else {
                                  return Curry._1(cb, /* Error */Block.__(0, [res[0]]));
                                }
                              }));
                } else {
                  return Curry._1(cb, /* Error */Block.__(0, [res[0]]));
                }
              }));
}

function flatMap$2(f, a, cb) {
  return Curry._1(a, (function (res) {
                if (res.tag) {
                  return Curry._2(f, res[0], (function (res) {
                                if (res.tag) {
                                  return Curry._1(cb, /* Ok */Block.__(1, [res[0]]));
                                } else {
                                  return Curry._1(cb, /* Error */Block.__(0, [res[0]]));
                                }
                              }));
                } else {
                  return Curry._1(cb, /* Error */Block.__(0, [res[0]]));
                }
              }));
}

function $$catch(f, a, cb) {
  return Curry._1(a, (function (x) {
                if (x.tag) {
                  return Curry._1(cb, /* Ok */Block.__(1, [x[0]]));
                } else {
                  return Curry._1(cb, /* Ok */Block.__(1, [Curry._1(f, x[0])]));
                }
              }));
}

function flatCatch(f, a, cb) {
  return Curry._1(a, (function (res) {
                if (res.tag) {
                  return Curry._1(cb, /* Ok */Block.__(1, [res[0]]));
                } else {
                  return Curry._2(f, res[0], (function (res) {
                                if (res.tag) {
                                  return Curry._1(cb, /* Ok */Block.__(1, [res[0]]));
                                } else {
                                  return Curry._1(cb, /* Error */Block.__(0, [res[0]]));
                                }
                              }));
                }
              }));
}

function fromOption$1($$default, opt) {
  if (opt) {
    var partial_arg = opt[0];
    return (function (param) {
        return Curry._1(param, /* Ok */Block.__(1, [partial_arg]));
      });
  } else {
    return (function (param) {
        return Curry._1(param, /* Error */Block.__(0, [$$default]));
      });
  }
}

function fromResult(res, cb) {
  return Curry._1(cb, res);
}

var Promise = [
  fromJs,
  none$1,
  resolve,
  reject,
  map$2,
  flatten$2,
  flatMap$2,
  $$catch,
  flatCatch,
  fromOption$1,
  fromResult
];

exports.Result  = Result;
exports.Async   = Async;
exports.Promise = Promise;
/* No side effect */
